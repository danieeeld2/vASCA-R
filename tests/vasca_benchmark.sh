#!/bin/bash
# Parameter configuration
SIGLEV=(0.01 0.05)
DATASETS=(
  "../datasets/tests_datasets/parglmVS_1.json"
  "../datasets/tests_datasets/parglmVS_2.json"
  "../datasets/tests_datasets/parglmVS_3.json"
  "../datasets/tests_datasets/parglmVS_4.json"
)
BENCHMARK_DIR="vasca_benchmark"
OUTPUT_FILE="$BENCHMARK_DIR/benchmark_results.csv"
R_SCRIPT="./vasca_runners/vasca_run.R"
OCTAVE_SCRIPT="./vasca_runners/vasca_run.m"

# Create benchmark directory if it doesn't exist
mkdir -p "$BENCHMARK_DIR"

# Verify that files exist
if [ ! -f "$R_SCRIPT" ]; then
    echo "Error: $R_SCRIPT not found"
    exit 1
fi

if [ ! -f "$OCTAVE_SCRIPT" ]; then
    echo "Error: $OCTAVE_SCRIPT not found"
    exit 1
fi

# Check if datasets exist
for ds in "${DATASETS[@]}"; do
    if [ ! -f "$ds" ]; then
        echo "Error: Dataset $ds not found"
        exit 1
    fi
done

# Create results file with header
echo "Language,Dataset,SigLevel,Time(s)" > $OUTPUT_FILE

# Extract dataset names for better labeling
declare -a DATASET_NAMES
for ds in "${DATASETS[@]}"; do
    name=$(basename "$ds" .json)
    DATASET_NAMES+=("$name")
done

# Benchmark for R
for ((i=0; i<${#DATASETS[@]}; i++)); do
    ds="${DATASETS[$i]}"
    ds_name="${DATASET_NAMES[$i]}"
    for sig in "${SIGLEV[@]}"; do
        echo "Running R with Dataset=$ds_name, SigLevel=$sig..."
        TIME=$( { time Rscript $R_SCRIPT "$ds" siglev $sig >/dev/null 2>&1; } 2>&1 | grep real | awk '{print $2}' | sed 's/m/*60+/g' | sed 's/s//g' | bc)
        echo "R,$ds_name,$sig,$TIME" >> $OUTPUT_FILE
        # Remove any files generated by R script
        find . -name "vasca_*.csv" -type f -delete
    done
done

# Benchmark for Octave (MATLAB compatible)
for ((i=0; i<${#DATASETS[@]}; i++)); do
    ds="${DATASETS[$i]}"
    ds_name="${DATASET_NAMES[$i]}"
    for sig in "${SIGLEV[@]}"; do
        echo "Running Octave with Dataset=$ds_name, SigLevel=$sig..."
        TIME=$( { time octave --no-gui -q $OCTAVE_SCRIPT "$ds" siglev $sig >/dev/null 2>&1; } 2>&1 | grep real | awk '{print $2}' | sed 's/m/*60+/g' | sed 's/s//g' | bc)
        echo "Octave,$ds_name,$sig,$TIME" >> $OUTPUT_FILE
        # Remove any files generated by Octave script
        find . -name "vasca_*.csv" -type f -delete
    done
done

echo "Benchmark completed. Results in $OUTPUT_FILE"

# Generate comparative plots with R
cat > $BENCHMARK_DIR/plot_benchmarks.R << EOF
library(ggplot2)

# Read the data
data <- read.csv("$OUTPUT_FILE")

# Convert time to numeric if not already
data\$Time <- as.numeric(data\$Time.s.)

# Convert SigLevel to factor (discrete) for proper plotting
data\$SigLevel <- as.factor(data\$SigLevel)

# Define a white background theme with grid lines
white_theme <- theme_bw() +
  theme(
    panel.background = element_rect(fill = "white"),
    plot.background = element_rect(fill = "white"),
    legend.background = element_rect(fill = "white"),
    legend.key = element_rect(fill = "white"),
    panel.grid.major = element_line(color = "grey90"),
    panel.grid.minor = element_line(color = "grey95"),
    axis.line = element_line(color = "black"),
    text = element_text(color = "black"),
    axis.text = element_text(color = "black"),
    plot.title = element_text(face = "bold", size = 14),
    legend.position = "right"
  )

# 1. Combined plot for all datasets and significance levels
p1 <- ggplot(data, aes(x=Dataset, y=Time, fill=Language)) +
  geom_bar(stat="identity", position=position_dodge()) +
  facet_wrap(~SigLevel, labeller = labeller(SigLevel = function(x) paste("Significance Level:", x))) +
  labs(title="Vasca Function: Execution Time Comparison between R and Octave",
       x="Dataset",
       y="Execution time (seconds)") +
  scale_fill_brewer(palette="Set1") +
  white_theme +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

ggsave("$BENCHMARK_DIR/vasca_comparison_all.png", p1, width=12, height=8, bg="white")

# 2. Plot comparing performance by dataset
p2 <- ggplot(data, aes(x=Language, y=Time, fill=SigLevel)) +
  geom_bar(stat="identity", position=position_dodge()) +
  facet_wrap(~Dataset, scales="free_y", ncol=2) +
  labs(title="Vasca Function: Performance by Dataset",
       x="Implementation Language",
       y="Execution time (seconds)") +
  scale_fill_brewer(palette="Set2", name="Significance\nLevel") +
  white_theme

ggsave("$BENCHMARK_DIR/vasca_by_dataset.png", p2, width=10, height=8, bg="white")

# 3. Plot comparing languages by significance level
p3 <- ggplot(data, aes(x=Dataset, y=Time, color=Language, group=Language)) +
  geom_point(size=3) +
  geom_line(linewidth=1) +
  facet_wrap(~SigLevel, labeller = labeller(SigLevel = function(x) paste("Significance Level:", x))) +
  labs(title="Vasca Function: Language Performance Across Datasets",
       x="Dataset",
       y="Execution time (seconds)") +
  scale_color_brewer(palette="Set1") +
  white_theme

ggsave("$BENCHMARK_DIR/vasca_language_comparison.png", p3, width=12, height=6, bg="white")

# 4. Heatmap style visualization
p4 <- ggplot(data, aes(x=Dataset, y=Language, fill=Time)) +
  geom_tile() +
  facet_wrap(~SigLevel, labeller = labeller(SigLevel = function(x) paste("Significance Level:", x))) +
  labs(title="Vasca Function: Execution Time Heatmap",
       x="Dataset",
       y="Language") +
  scale_fill_distiller(palette = "YlOrRd", direction = 1, name="Time (s)") +
  white_theme +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())

ggsave("$BENCHMARK_DIR/vasca_heatmap.png", p4, width=10, height=6, bg="white")
EOF

# Run R script to generate plots
echo "Generating comparative plots..."
Rscript $BENCHMARK_DIR/plot_benchmarks.R

echo "Analysis complete. The following plots have been generated in $BENCHMARK_DIR:"
echo "- vasca_comparison_all.png (Comparison across all datasets and significance levels)"
echo "- vasca_by_dataset.png (Performance breakdown by dataset)"
echo "- vasca_language_comparison.png (Language performance trends across datasets)"
echo "- vasca_heatmap.png (Heatmap visualization of execution times)"
echo "- vasca_ratio_comparison.png (Performance ratio between R and Octave)"